{"version":3,"file":"static/js/880.85d9e205.chunk.js","mappings":"gKAEO,MAAMA,EAAiBC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gFAM/BC,EAAQJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sEAMjBI,EAAeP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qX,gBCZ/B,MAAMO,EAAOV,EAAAA,GAAOQ,IAAGN,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oTAgBjBQ,EAAYX,EAAAA,GAAOQ,IAAGF,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,0LAO/BO,GAKSE,EAAYZ,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gUAetBU,EAAWb,EAAAA,GAAOQ,IAAGM,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kWAgBrBY,EAAWf,EAAAA,GAAOgB,GAAEC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,wEAMpBe,EAAclB,EAAAA,GAAOmB,EAACC,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,2H,aC1DnC,MAmBA,EAnBwCkB,IAAsC,IAArC,GAAEC,EAAE,MAAEC,EAAK,iBAAEC,GAAkBH,EACtE,OACEI,EAAAA,EAAAA,KAAA,KAAGC,KAAI,QAAAC,OAAUL,GAAMM,MAAO,CAAEC,eAAgB,QAASC,UACvDL,EAAAA,EAAAA,KAACf,EAAI,CAAAoB,UACHC,EAAAA,EAAAA,MAACpB,EAAS,CAAAmB,SAAA,EACRC,EAAAA,EAAAA,MAACnB,EAAS,CAAAkB,SAAA,EACRL,EAAAA,EAAAA,KAACV,EAAQ,CAAAe,SAAEP,KACXE,EAAAA,EAAAA,KAACP,EAAW,CAAAY,SAAEN,QAEhBO,EAAAA,EAAAA,MAAClB,EAAQ,CAAAiB,SAAA,EACPL,EAAAA,EAAAA,KAACV,EAAQ,CAAAe,SAAEP,KACXE,EAAAA,EAAAA,KAACP,EAAW,CAAAY,SAAC,iCAIjB,E,cCnBR,MAkBA,EAlB4BE,KAExBD,EAAAA,EAAAA,MAAChC,EAAc,CAAA+B,SAAA,EACbL,EAAAA,EAAAA,KAACrB,EAAK,CAAA0B,SAAC,yBACPL,EAAAA,EAAAA,KAAClB,EAAY,CAAAuB,SACVG,EAAQC,KAAKC,IACZV,EAAAA,EAAAA,KAACW,EAAO,CAENd,GAAIa,EAAIb,GACRC,MAAOY,EAAIZ,MACXC,iBAAkBW,EAAIX,kBAHjBW,EAAIb,U","sources":["components/Positions/styles.tsx","components/JobCard/styles.tsx","components/JobCard/index.tsx","components/Positions/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SectionWrapper = styled.section`\n  padding: 80px 20px;\n  background: #f7f9fc;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  font-size: 2rem;\n  color: #333;\n  margin-bottom: 40px;\n`;\n\nexport const CardsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive grid layout */\n  gap: 30px; /* More spacing between cards */\n  justify-content: center; /* Center the cards horizontally */\n  align-items: center; /* Ensure vertical alignment */\n  max-width: 1200px;\n  margin: 0 auto; /* Centers the grid within the container */\n`;\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  perspective: 1000px;\n  width: 100%;\n  max-width: 300px;\n  height: 400px;\n  margin: 20px;\n  cursor: pointer;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  transition: box-shadow 0.3s ease-in-out;\n\n  &:hover {\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const CardInner = styled.div`\n  width: 100%;\n  height: 100%;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n  position: relative;\n\n  ${Card}:hover & {\n    transform: rotateY(180deg);\n  }\n`;\n\nexport const CardFront = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  border-radius: 10px;\n  text-align: center; /* Ensure text is properly centered */\n`;\n\nexport const CardBack = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  background: #f9f9f9;\n  transform: rotateY(180deg);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  border-radius: 10px;\n  text-align: center; /* Ensure text is properly centered */\n`;\n\nexport const JobTitle = styled.h3`\n  font-size: 1.5rem;\n  color: #333;\n  margin-bottom: 10px;\n`;\n\nexport const Description = styled.p`\n  font-size: 1rem;\n  color: #666;\n  margin: 0;\n  padding: 0 10px; /* Adds padding for better text spacing */\n`;\n","import React from \"react\";\nimport { Card, CardInner, CardFront, CardBack, JobTitle, Description } from \"./styles\";\n\ninterface JobCardProps {\n  id: string;\n  title: string;\n  briefDescription: string;\n}\n\nconst JobCard: React.FC<JobCardProps> = ({ id, title, briefDescription }) => {\n  return (\n    <a href={`/job/${id}`} style={{ textDecoration: \"none\" }}>\n      <Card>\n        <CardInner>\n          <CardFront>\n            <JobTitle>{title}</JobTitle>\n            <Description>{briefDescription}</Description>\n          </CardFront>\n          <CardBack>\n            <JobTitle>{title}</JobTitle>\n            <Description>Click to Learn More</Description>\n          </CardBack>\n        </CardInner>\n      </Card>\n    </a>\n  );\n};\n\nexport default JobCard;\n","import React from \"react\";\nimport { SectionWrapper, Title, CardsWrapper } from \"./styles\";\nimport JobCard from \"../JobCard\";\nimport jobData from \"../../content/JobData.json\"; // Import job data\n\nconst Positions: React.FC = () => {\n  return (\n    <SectionWrapper>\n      <Title>Positions Available</Title>\n      <CardsWrapper>\n        {jobData.map((job) => (\n          <JobCard\n            key={job.id}\n            id={job.id}\n            title={job.title}\n            briefDescription={job.briefDescription} // Only use briefDescription\n          />\n        ))}\n      </CardsWrapper>\n    </SectionWrapper>\n  );\n};\n\nexport default Positions;\n"],"names":["SectionWrapper","styled","section","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","CardsWrapper","div","_templateObject3","Card","CardInner","CardFront","CardBack","_templateObject4","JobTitle","h3","_templateObject5","Description","p","_templateObject6","_ref","id","title","briefDescription","_jsx","href","concat","style","textDecoration","children","_jsxs","Positions","jobData","map","job","JobCard"],"sourceRoot":""}